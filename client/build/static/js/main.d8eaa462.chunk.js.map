{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/Detail.jsx","components/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","pets","setPets","fetchPets","axios","get","then","res","console","log","data","catch","err","useEffect","className","map","p","i","key","name","type","to","_id","onClick","e","delete","PetForm","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","preventDefault","newPet","post","navigate","onChange","target","value","properties","message","Detail","details","setDetails","style","fontWeight","moment","createdAt","format","EditPet","pet","put","App","path","Edit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d8eaa462.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Display = props => {\n\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = () => {\n        axios.get(\"http://localhost:8000/api/pet\")\n            .then( res => {\n                console.log(res);\n                setPets(res.data)\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    useEffect( () => {\n        fetchPets();\n    }, []);\n\n    const remove = _id => {\n        console.log(_id);\n        axios.delete(`http://localhost:8000/api/pet/delete/${_id}`)\n            .then(res => {\n                console.log(res);\n                fetchPets();\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div className=\"container mt-5\">\n                <table className=\"table table-striped table-hover table-dark\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Pet Name</th>\n                            <th>Pet Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {pets.map( (p, i) => \n                        <tr key={i}>\n                            <td>{p.name}</td>\n                            <td>{p.type}</td>\n                            <td>\n                                <Link className=\"btn btn-sm btn-outline-primary mr-2\" to={`/pet/${p._id}`}>View Details</Link>\n                                <Link className=\"btn btn-sm btn-outline-warning mr-2\" to={`/pet/update/${p._id}`}>Edit Pet</Link>\n                                <button className=\"btn btn-sm btn-outline-danger mr-2\" onClick={e => remove(p._id)}>Delete</button>\n                            </td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router'\n\nconst PetForm = props => {\n\n    const[name, setName] = useState(\"\");\n    const[type, setType] = useState(\"\");\n    const[description, setDescription] = useState(\"\");\n    const[skill1, setSkill1] = useState(\"\");\n    const[skill2, setSkill2] = useState(\"\");\n    const[skill3, setSkill3] = useState(\"\");\n    const[errors, setErrors] = useState({});\n\n    const create = e => {\n        e.preventDefault();\n        const newPet = {name, type, description, skill1, skill2, skill3};\n\n        axios.post(\"http://localhost:8000/api/pet/new\", newPet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <form onSubmit={ create }>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-lg\">\n                    <h4>Details (required):</h4>\n                        <div className=\"form-group\">\n                            <label>Pet Name</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value)} />\n                            {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Type</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value)}/>\n                            {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Description</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setDescription(e.target.value)} />\n                            {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-lg\">\n                        <h4>Skills (optional):</h4>\n                        <div className=\"form-group\">\n                            <label>Skill 1</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill1(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Skill 2</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill2(e.target.value)} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Skill 3</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill3(e.target.value)} />\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Add Pet\"/>\n                </div>\n            </div>\n        </form>\n    )\n\n}\n\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport {navigate} from '@reach/router'\n\nconst Detail = (props) => {\n\n    const [details, setDetails] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\n            .then( res => {\n                console.log(res);\n                setDetails(res.data);\n            })\n            .catch(err => console.log(err));\n    }, [props._id]);\n\n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/pet/delete/${props._id}`)\n            .then(res => {\n                console.log(res);\n                navigate(\"/\");\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"card mt-5\">\n                    <div className=\"card-header bg-primary text-white\">{details.name}'s Details</div>\n                    <div className=\"card-body\">\n                        <p><span style={{fontWeight: 'bold'}}>Pet Type:</span> {details.type}</p>\n                        <p><span style={{fontWeight: 'bold'}}>Description:</span> {details.description}</p>\n                        <p><span style={{fontWeight: 'bold'}}>Skills:</span>\n                            <p>{details.skill1}</p>\n                            <p>{details.skill2}</p>\n                            <p>{details.skill3}</p>\n                        </p>\n                        <p><span style={{fontWeight: 'bold'}}>Date added to shelter:</span> {moment(details.createdAt).format('MMMM Do YYYY, h:mm a')}</p>\n                        <p><span style={{fontWeight: 'bold'}}>Database ID:</span> {details._id}</p>\n                    </div>\n                </div>\n                <button className=\"btn btn-success mt-5\" onClick={remove}>Adopt {details.name}</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Detail;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router'\n\nconst EditPet = props => {\n\n    const[name, setName] = useState(\"\");\n    const[type, setType] = useState(\"\");\n    const[description, setDescription] = useState(\"\");\n    const[skill1, setSkill1] = useState(\"\");\n    const[skill2, setSkill2] = useState(\"\");\n    const[skill3, setSkill3] = useState(\"\");\n    const[errors, setErrors] = useState({});\n\n    useEffect( () => {\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkill1(res.data.skill1);\n                setSkill2(res.data.skill2);\n                setSkill3(res.data.skill3);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdatePet = e => {\n        e.preventDefault();\n        const pet = {name, type, description, skill1, skill2, skill3};\n        axios.put(`http://localhost:8000/api/pet/update/${props._id}`, pet)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <form onSubmit={UpdatePet}>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-lg\">\n                    <h4>Details (required):</h4>\n                        <div className=\"form-group\">\n                            <label>Pet Name</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setName(e.target.value)} value={name}/>\n                            {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Type</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setType(e.target.value)} value={type}/>\n                            {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Description</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setDescription(e.target.value)} value={description}/>\n                            {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n                        </div>\n                    </div>\n                    <div className=\"col-lg\">\n                        <h4>Skills (optional):</h4>\n                        <div className=\"form-group\">\n                            <label>Skill 1</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill1(e.target.value)} value={skill1}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Skill 2</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill2(e.target.value)} value={skill2}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Skill 3</label>\n                            <input type=\"text\" className=\"form-control\" onChange={ e => setSkill3(e.target.value)} value={skill3}/>\n                        </div>\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Update Pet\"/>\n                </div>\n            </div>\n        </form>\n    )\n\n}\n\nexport default EditPet;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from './components/Display';\nimport PetForm from './components/PetForm';\nimport Detail from './components/Detail';\nimport Edit from './components/Edit';\nimport { Link, Router } from '@reach/router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"tex-center\">\n          <div className=\"jumbotron mt-5\">\n            <h1>Welcome to Pet Shelter!</h1>\n            <hr/>\n            <h3>These pets are looking for a good home...</h3>\n          </div>\n          <Link className=\"btn btn-warning mt-3 mr-2\" to=\"/\">Pets List</Link>\n          <Link className=\"btn btn-warning mt-3\" to=\"/new\">Add Pet</Link>\n        </div>\n      </div>\n        <Router>\n          <PetForm path=\"/new\"/>\n          <Display path=\"/\" />\n          <Detail path=\"/pet/:_id\"/>\n          <Edit path=\"/pet/update/:_id\"/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}